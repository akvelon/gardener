cordova.define("com.msopentech.allJoyn.Status", function(require, exports, module) { 
// Copyright (c) Microsoft Open Technologies, Inc.  All rights reserved.  Licensed under the Apache License, Version 2.0.  See License.txt in the project root for license information.

/*global module*/
/*jshint -W089*/

var statusCodes = [];
statusCodes[0x0] = { message: "OK", description: "Success." };
statusCodes[0x1] = { message: "FAIL", description: "Generic failure." };
statusCodes[0x2] = { message: "UTF_CONVERSION_FAILED", description: "Conversion between UTF bases failed." };
statusCodes[0x3] = { message: "BUFFER_TOO_SMALL", description: "Not enough space in buffer for operation." };
statusCodes[0x4] = { message: "OS_ERROR", description: "Underlying OS has indicated an error." };
statusCodes[0x5] = { message: "OUT_OF_MEMORY", description: "Failed to allocate memory." };
statusCodes[0x6] = { message: "SOCKET_BIND_ERROR", description: "Bind to IP address failed." };
statusCodes[0x7] = { message: "INIT_FAILED", description: "Initialization failed." };
statusCodes[0x8] = { message: "WOULDBLOCK", description: "An I/O attempt on non-blocking resource would block" };
statusCodes[0x9] = { message: "NOT_IMPLEMENTED", description: "Feature not implemented" };
statusCodes[0xa] = { message: "TIMEOUT", description: "Operation timed out" };
statusCodes[0xb] = { message: "SOCK_OTHER_END_CLOSED", description: "Other end closed the socket" };
statusCodes[0xc] = { message: "BAD_ARG_1", description: "Function call argument 1 is invalid" };
statusCodes[0xd] = { message: "BAD_ARG_2", description: "Function call argument 2 is invalid" };
statusCodes[0xe] = { message: "BAD_ARG_3", description: "Function call argument 3 is invalid" };
statusCodes[0xf] = { message: "BAD_ARG_4", description: "Function call argument 4 is invalid" };
statusCodes[0x10] = { message: "BAD_ARG_5", description: "Function call argument 5 is invalid" };
statusCodes[0x11] = { message: "BAD_ARG_6", description: "Function call argument 6 is invalid" };
statusCodes[0x12] = { message: "BAD_ARG_7", description: "Function call argument 7 is invalid" };
statusCodes[0x13] = { message: "BAD_ARG_8", description: "Function call argument 8 is invalid" };
statusCodes[0x14] = { message: "INVALID_ADDRESS", description: "Address is NULL or invalid" };
statusCodes[0x15] = { message: "INVALID_DATA", description: "Generic invalid data error" };
statusCodes[0x16] = { message: "READ_ERROR", description: "Generic read error" };
statusCodes[0x17] = { message: "WRITE_ERROR", description: "Generic write error" };
statusCodes[0x18] = { message: "OPEN_FAILED", description: "Generic open failure" };
statusCodes[0x19] = { message: "PARSE_ERROR", description: "Generic parse failure" };
statusCodes[0x1A] = { message: "END_OF_DATA", description: "Generic EOD/EOF error" };
statusCodes[0x1B] = { message: "CONN_REFUSED", description: "Connection was refused because no one is listening" };
statusCodes[0x1C] = { message: "BAD_ARG_COUNT", description: "Incorrect number of arguments given to function call" };
statusCodes[0x1D] = { message: "WARNING", description: "Generic warning" };
statusCodes[0x1E] = { message: "EOF", description: "End of file" };
statusCodes[0x1000] = { message: "COMMON_ERRORS", description: "Error code block for the Common subsystem." };
statusCodes[0x1001] = { message: "STOPPING_THREAD", description: "Operation interrupted by ERThread stop signal." };
statusCodes[0x1002] = { message: "ALERTED_THREAD", description: "Operation interrupted by ERThread alert signal." };
statusCodes[0x1003] = { message: "XML_MALFORMED", description: "Cannot parse malformed XML" };
statusCodes[0x1004] = { message: "AUTH_FAIL", description: "Authentication failed" };
statusCodes[0x1005] = { message: "AUTH_USER_REJECT", description: "Authentication was rejected by user" };
statusCodes[0x1006] = { message: "NO_SUCH_ALARM", description: "Attempt to reference non-existent timer alarm" };
statusCodes[0x1007] = { message: "TIMER_FALLBEHIND", description: "A timer thread is missing scheduled alarm times" };
statusCodes[0x1008] = { message: "SSL_ERRORS", description: "Error code block for SSL subsystem" };
statusCodes[0x1009] = { message: "SSL_INIT", description: "SSL initialization failed." };
statusCodes[0x100a] = { message: "SSL_CONNECT", description: "Failed to connect to remote host using SSL" };
statusCodes[0x100b] = { message: "SSL_VERIFY", description: "Failed to verify identity of SSL destination" };
statusCodes[0x100c] = { message: "EXTERNAL_THREAD", description: "Operation not supported on external thread wrapper" };
statusCodes[0x100d] = { message: "CRYPTO_ERROR", description: "Non-specific error in the crypto subsystem" };
statusCodes[0x100e] = { message: "CRYPTO_TRUNCATED", description: "Not enough room for key" };
statusCodes[0x100f] = { message: "CRYPTO_KEY_UNAVAILABLE", description: "No key to return" };
statusCodes[0x1010] = { message: "BAD_HOSTNAME", description: "Cannot lookup hostname" };
statusCodes[0x1011] = { message: "CRYPTO_KEY_UNUSABLE", description: "Key cannot be used" };
statusCodes[0x1012] = { message: "EMPTY_KEY_BLOB", description: "Key blob is empty" };
statusCodes[0x1013] = { message: "CORRUPT_KEYBLOB", description: "Key blob is corrupted" };
statusCodes[0x1014] = { message: "INVALID_KEY_ENCODING", description: "Encoded key is not valid" };
statusCodes[0x1015] = { message: "DEAD_THREAD", description: "Operation not allowed thread is dead" };
statusCodes[0x1016] = { message: "THREAD_RUNNING", description: "Cannot start a thread that is already running" };
statusCodes[0x1017] = { message: "THREAD_STOPPING", description: "Cannot start a thread that is already stopping" };
statusCodes[0x1018] = { message: "BAD_STRING_ENCODING", description: "Encoded string did not have the expected format or contents" };
statusCodes[0x1019] = { message: "CRYPTO_INSUFFICIENT_SECURITY", description: "Crypto algorithm parameters do not provide sufficient security" };
statusCodes[0x101a] = { message: "CRYPTO_ILLEGAL_PARAMETERS", description: "Crypto algorithm parameter value is illegal" };
statusCodes[0x101b] = { message: "CRYPTO_HASH_UNINITIALIZED", description: "Cryptographic hash function must be initialized" };
statusCodes[0x101c] = { message: "THREAD_NO_WAIT", description: "Thread cannot be blocked by a WAIT or SLEEP call" };
statusCodes[0x101d] = { message: "TIMER_EXITING", description: "Cannot add an alarm to a timer that is exiting" };
statusCodes[0x101e] = { message: "INVALID_GUID", description: "String is not a hex encoded GUID string" };
statusCodes[0x101f] = { message: "THREADPOOL_EXHAUSTED", description: "A thread pool has reached its specified concurrency" };
statusCodes[0x1020] = { message: "THREADPOOL_STOPPING", description: "Cannot execute a closure on a stopping thread pool" };
statusCodes[0x1021] = { message: "INVALID_STREAM", description: "Attempt to reference non-existent stream entry" };
statusCodes[0x1022] = { message: "TIMER_FULL", description: "Attempt to reference non-existent stream entry" };
statusCodes[0x1023] = { message: "IODISPATCH_STOPPING", description: "Cannot execute a read or write command on an IODispatch thread because it is stopping." };
statusCodes[0x1024] = { message: "SLAP_INVALID_PACKET_LEN", description: "Length of SLAP packet is invalid." };
statusCodes[0x1025] = { message: "SLAP_HDR_CHECKSUM_ERROR", description: "SLAP packet header checksum error." };
statusCodes[0x1026] = { message: "SLAP_INVALID_PACKET_TYPE", description: "Invalid SLAP packet type." };
statusCodes[0x1027] = { message: "SLAP_LEN_MISMATCH", description: "Calculated length does not match the received length." };
statusCodes[0x1028] = { message: "SLAP_PACKET_TYPE_MISMATCH", description: "Packet type does not match reliability bit." };
statusCodes[0x1029] = { message: "SLAP_CRC_ERROR", description: "SLAP packet CRC error." };
statusCodes[0x102A] = { message: "SLAP_ERROR", description: "Generic SLAP error." };
statusCodes[0x102B] = { message: "SLAP_OTHER_END_CLOSED", description: "Other end closed the SLAP connection" };
statusCodes[0x102C] = { message: "TIMER_NOT_ALLOWED", description: "Timer EnableReentrancy call not allowed" };
statusCodes[0xffff] = { message: "NONE", description: "No error code to report" };
statusCodes[0x9000] = { message: "BUS_ERRORS", description: "Error code block for ALLJOYN wire protocol" };
statusCodes[0x9001] = { message: "BUS_READ_ERROR", description: "Error attempting to read" };
statusCodes[0x9002] = { message: "BUS_WRITE_ERROR", description: "Error attempting to write" };
statusCodes[0x9003] = { message: "BUS_BAD_VALUE_TYPE", description: "Read an invalid value type" };
statusCodes[0x9004] = { message: "BUS_BAD_HEADER_FIELD", description: "Read an invalid header field" };
statusCodes[0x9005] = { message: "BUS_BAD_SIGNATURE", description: "Signature was badly formed" };
statusCodes[0x9006] = { message: "BUS_BAD_OBJ_PATH", description: "Object path contained an illegal character" };
statusCodes[0x9007] = { message: "BUS_BAD_MEMBER_NAME", description: "A member name contained an illegal character" };
statusCodes[0x9008] = { message: "BUS_BAD_INTERFACE_NAME", description: "An interface name contained an illegal character" };
statusCodes[0x9009] = { message: "BUS_BAD_ERROR_NAME", description: "An error name contained an illegal character" };
statusCodes[0x900a] = { message: "BUS_BAD_BUS_NAME", description: "A bus name contained an illegal character" };
statusCodes[0x900b] = { message: "BUS_NAME_TOO_LONG", description: "A name exceeded the permitted length" };
statusCodes[0x900c] = { message: "BUS_BAD_LENGTH", description: "Length of an array was not a multiple of the array element size" };
statusCodes[0x900d] = { message: "BUS_BAD_VALUE", description: "Parsed value in a message was invalid (for example: boolean > 1) " };
statusCodes[0x900e] = { message: "BUS_BAD_HDR_FLAGS", description: "Unknown header flags" };
statusCodes[0x900f] = { message: "BUS_BAD_BODY_LEN", description: "Body length was to long or too short" };
statusCodes[0x9010] = { message: "BUS_BAD_HEADER_LEN", description: "Header length was to long or too short" };
statusCodes[0x9011] = { message: "BUS_UNKNOWN_SERIAL", description: "Serial number in a method response was unknown" };
statusCodes[0x9012] = { message: "BUS_UNKNOWN_PATH", description: "Path in a method call or signal was unknown" };
statusCodes[0x9013] = { message: "BUS_UNKNOWN_INTERFACE", description: "Interface in a method call or signal was unknown" };
statusCodes[0x9014] = { message: "BUS_ESTABLISH_FAILED", description: "Failed to establish a connection" };
statusCodes[0x9015] = { message: "BUS_UNEXPECTED_SIGNATURE", description: "Signature in message was not what was expected" };
statusCodes[0x9016] = { message: "BUS_INTERFACE_MISSING", description: "Interface header field is missing" };
statusCodes[0x9017] = { message: "BUS_PATH_MISSING", description: "Object path header field is missing" };
statusCodes[0x9018] = { message: "BUS_MEMBER_MISSING", description: "Member header field is missing" };
statusCodes[0x9019] = { message: "BUS_REPLY_SERIAL_MISSING", description: "Reply-Serial header field is missing" };
statusCodes[0x901a] = { message: "BUS_ERROR_NAME_MISSING", description: "Error Name header field is missing" };
statusCodes[0x901b] = { message: "BUS_INTERFACE_NO_SUCH_MEMBER", description: "Interface does not have the requested member" };
statusCodes[0x901c] = { message: "BUS_NO_SUCH_OBJECT", description: "Object does not exist" };
statusCodes[0x901d] = { message: "BUS_OBJECT_NO_SUCH_MEMBER", description: "Object does not have the requested member (on any interface)" };
statusCodes[0x901e] = { message: "BUS_OBJECT_NO_SUCH_INTERFACE", description: "Object does not have the requested interface" };
statusCodes[0x901f] = { message: "BUS_NO_SUCH_INTERFACE", description: "Requested interface does not exist" };
statusCodes[0x9020] = { message: "BUS_MEMBER_NO_SUCH_SIGNATURE", description: "Member exists but does not have the requested signature" };
statusCodes[0x9021] = { message: "BUS_NOT_NUL_TERMINATED", description: "A string or signature was not NUL terminated" };
statusCodes[0x9022] = { message: "BUS_NO_SUCH_PROPERTY", description: "No such property for a GET or SET operation " };
statusCodes[0x9023] = { message: "BUS_SET_WRONG_SIGNATURE", description: "Attempt to set a property value with the wrong signature" };
statusCodes[0x9024] = { message: "BUS_PROPERTY_VALUE_NOT_SET", description: "Attempt to get a property whose value has not been set" };
statusCodes[0x9025] = { message: "BUS_PROPERTY_ACCESS_DENIED", description: "Attempt to set or get a property failed due to access rights" };
statusCodes[0x9026] = { message: "BUS_NO_TRANSPORTS", description: "No physical message transports were specified" };
statusCodes[0x9027] = { message: "BUS_BAD_TRANSPORT_ARGS", description: "Missing or badly formatted transports args specified" };
statusCodes[0x9028] = { message: "BUS_NO_ROUTE", description: "Message cannot be routed to destination" };
statusCodes[0x9029] = { message: "BUS_NO_ENDPOINT", description: "An endpoint with given name cannot be found" };
statusCodes[0x902a] = { message: "BUS_BAD_SEND_PARAMETER", description: "Bad parameter in send message call" };
statusCodes[0x902b] = { message: "BUS_UNMATCHED_REPLY_SERIAL", description: "Serial number in method call reply message did not match any method calls" };
statusCodes[0x902c] = { message: "BUS_BAD_SENDER_ID", description: "Sender identifier is invalid" };
statusCodes[0x902d] = { message: "BUS_TRANSPORT_NOT_STARTED", description: "Attempt to send on a transport that has not been started" };
statusCodes[0x902e] = { message: "BUS_EMPTY_MESSAGE", description: "Attempt to deliver an empty message" };
statusCodes[0x902f] = { message: "BUS_NOT_OWNER", description: "A bus name operation was not permitted because sender does not own name" };
statusCodes[0x9030] = { message: "BUS_SET_PROPERTY_REJECTED", description: "Application rejected a request to set a property" };
statusCodes[0x9031] = { message: "BUS_CONNECT_FAILED", description: "Connection failed" };
statusCodes[0x9032] = { message: "BUS_REPLY_IS_ERROR_MESSAGE", description: "Response from a method call was an ERROR message" };
statusCodes[0x9033] = { message: "BUS_NOT_AUTHENTICATING", description: "Not in an authentication conversation" };
statusCodes[0x9034] = { message: "BUS_NO_LISTENER", description: "A listener is required to implement the requested function" };
statusCodes[0x9036] = { message: "BUS_NOT_ALLOWED", description: "The operation attempted is not allowed" };
statusCodes[0x9037] = { message: "BUS_WRITE_QUEUE_FULL", description: "Write failed because write queue is full" };
statusCodes[0x9038] = { message: "BUS_ENDPOINT_CLOSING", description: "Operation not permitted on endpoint in process of closing" };
statusCodes[0x9039] = { message: "BUS_INTERFACE_MISMATCH", description: "Received two conflicting definitions for the same interface" };
statusCodes[0x903a] = { message: "BUS_MEMBER_ALREADY_EXISTS", description: "Attempt to add a member to an interface that already exists" };
statusCodes[0x903b] = { message: "BUS_PROPERTY_ALREADY_EXISTS", description: "Attempt to add a property to an interface that already exists" };
statusCodes[0x903c] = { message: "BUS_IFACE_ALREADY_EXISTS", description: "Attempt to add an interface to an object that already exists" };
statusCodes[0x903d] = { message: "BUS_ERROR_RESPONSE", description: "Received an error response to a method call" };
statusCodes[0x903e] = { message: "BUS_BAD_XML", description: "XML data is improperly formatted" };
statusCodes[0x903f] = { message: "BUS_BAD_CHILD_PATH", description: "The path of a child object is incorrect given it's parent's path" };
statusCodes[0x9040] = { message: "BUS_OBJ_ALREADY_EXISTS", description: "Attempt to add a RemoteObject child that already exists" };
statusCodes[0x9041] = { message: "BUS_OBJ_NOT_FOUND", description: "Object with given path does not exist" };
statusCodes[0x9042] = { message: "BUS_CANNOT_EXPAND_MESSAGE", description: "Expansion information for a compressed message is not available" };
statusCodes[0x9043] = { message: "BUS_NOT_COMPRESSED", description: "Attempt to expand a message that is not compressed" };
statusCodes[0x9044] = { message: "BUS_ALREADY_CONNECTED", description: "Attempt to connect to a bus which is already connected" };
statusCodes[0x9045] = { message: "BUS_NOT_CONNECTED", description: "Attempt to use a bus attachment that is not connected to a router" };
statusCodes[0x9046] = { message: "BUS_ALREADY_LISTENING", description: "Attempt to listen on a bus address which is already being listened on" };
statusCodes[0x9047] = { message: "BUS_KEY_UNAVAILABLE", description: "The request key is not available" };
statusCodes[0x9048] = { message: "BUS_TRUNCATED", description: "Insufficient memory to copy data" };
statusCodes[0x9049] = { message: "BUS_KEY_STORE_NOT_LOADED", description: "Accessing the key store before it is loaded" };
statusCodes[0x904a] = { message: "BUS_NO_AUTHENTICATION_MECHANISM", description: "There is no authentication mechanism" };
statusCodes[0x904b] = { message: "BUS_BUS_ALREADY_STARTED", description: "Bus has already been started" };
statusCodes[0x904c] = { message: "BUS_BUS_NOT_STARTED", description: "Bus has not yet been started" };
statusCodes[0x904d] = { message: "BUS_KEYBLOB_OP_INVALID", description: "The operation requested cannot be performed using this key blob" };
statusCodes[0x904e] = { message: "BUS_INVALID_HEADER_CHECKSUM", description: "Invalid header checksum in an encrypted message" };
statusCodes[0x904f] = { message: "BUS_MESSAGE_NOT_ENCRYPTED", description: "Security policy requires the message to be encrypted" };
statusCodes[0x9050] = { message: "BUS_INVALID_HEADER_SERIAL", description: "Serial number in message header is invalid" };
statusCodes[0x9051] = { message: "BUS_TIME_TO_LIVE_EXPIRED", description: "Message time-to-live has expired" };
statusCodes[0x9052] = { message: "BUS_HDR_EXPANSION_INVALID", description: "Something is wrong with a header expansion" };
statusCodes[0x9053] = { message: "BUS_MISSING_COMPRESSION_TOKEN", description: "Compressed headers require a compression token" };
statusCodes[0x9054] = { message: "BUS_NO_PEER_GUID", description: "There is no GUID for this peer" };
statusCodes[0x9055] = { message: "BUS_MESSAGE_DECRYPTION_FAILED", description: "Message decryption failed" };
statusCodes[0x9056] = { message: "BUS_SECURITY_FATAL", description: "A fatal security failure" };
statusCodes[0x9057] = { message: "BUS_KEY_EXPIRED", description: "An encryption key has expired" };
statusCodes[0x9058] = { message: "BUS_CORRUPT_KEYSTORE", description: "Key store is corrupt" };
statusCodes[0x9059] = { message: "BUS_NO_CALL_FOR_REPLY", description: "A reply only allowed in response to a method call" };
statusCodes[0x905a] = { message: "BUS_NOT_A_COMPLETE_TYPE", description: "Signature must be a single complete type" };
statusCodes[0x905b] = { message: "BUS_POLICY_VIOLATION", description: "Message does not meet policy restrictions" };
statusCodes[0x905c] = { message: "BUS_NO_SUCH_SERVICE", description: "Service name is unknown" };
statusCodes[0x905d] = { message: "BUS_TRANSPORT_NOT_AVAILABLE", description: "Transport cannot be used due to underlying mechanism disabled by OS" };
statusCodes[0x905e] = { message: "BUS_INVALID_AUTH_MECHANISM", description: "Authentication mechanism is not valid" };
statusCodes[0x905f] = { message: "BUS_KEYSTORE_VERSION_MISMATCH", description: "Key store has wrong version number" };
statusCodes[0x9060] = { message: "BUS_BLOCKING_CALL_NOT_ALLOWED", description: "A synchronous method call from within handler is not permitted." };
statusCodes[0x9061] = { message: "BUS_SIGNATURE_MISMATCH", description: "MsgArg(s) do not match signature." };
statusCodes[0x9062] = { message: "BUS_STOPPING", description: "The bus is stopping." };
statusCodes[0x9063] = { message: "BUS_METHOD_CALL_ABORTED", description: "The method call was aborted." };
statusCodes[0x9064] = { message: "BUS_CANNOT_ADD_INTERFACE", description: "An interface cannot be added to an object that is already registered." };
statusCodes[0x9065] = { message: "BUS_CANNOT_ADD_HANDLER", description: "A method handler cannot be added to an object that is already registered." };
statusCodes[0x9066] = { message: "BUS_KEYSTORE_NOT_LOADED", description: "Key store has not been loaded" };
statusCodes[0x906b] = { message: "BUS_NO_SUCH_HANDLE", description: "Handle is not in the handle table" };
statusCodes[0x906c] = { message: "BUS_HANDLES_NOT_ENABLED", description: "Passing of handles is not enabled for this connection" };
statusCodes[0x906d] = { message: "BUS_HANDLES_MISMATCH", description: "Message had more handles than expected" };
statusCodes[0x906f] = { message: "BUS_NO_SESSION", description: "Session id is not valid" };
statusCodes[0x9070] = { message: "BUS_ELEMENT_NOT_FOUND", description: "Dictionary element was not found" };
statusCodes[0x9071] = { message: "BUS_NOT_A_DICTIONARY", description: "MsgArg was not an array of dictionary elements" };
statusCodes[0x9072] = { message: "BUS_WAIT_FAILED", description: "Wait failed" };
statusCodes[0x9074] = { message: "BUS_BAD_SESSION_OPTS", description: "Session options are bad or incompatible" };
statusCodes[0x9075] = { message: "BUS_CONNECTION_REJECTED", description: "Incoming connection rejected" };
statusCodes[0x9076] = { message: "DBUS_REQUEST_NAME_REPLY_PRIMARY_OWNER", description: "RequestName reply: Name was successfully obtained" };
statusCodes[0x9077] = { message: "DBUS_REQUEST_NAME_REPLY_IN_QUEUE", description: "RequestName reply: Name is already owned, request for name has been queued" };
statusCodes[0x9078] = { message: "DBUS_REQUEST_NAME_REPLY_EXISTS", description: "RequestName reply: Name is already owned and DO_NOT_QUEUE was specified in request" };
statusCodes[0x9079] = { message: "DBUS_REQUEST_NAME_REPLY_ALREADY_OWNER", description: "RequestName reply: Name is already owned by this endpoint" };
statusCodes[0x907a] = { message: "DBUS_RELEASE_NAME_REPLY_RELEASED", description: "ReleaseName reply: Name was released" };
statusCodes[0x907b] = { message: "DBUS_RELEASE_NAME_REPLY_NON_EXISTENT", description: " ReleaseName reply: Name does not exist" };
statusCodes[0x907c] = { message: "DBUS_RELEASE_NAME_REPLY_NOT_OWNER", description: "ReleaseName reply: Request to release name that is not owned by this endpoint" };
statusCodes[0x907e] = { message: "DBUS_START_REPLY_ALREADY_RUNNING", description: "StartServiceByName reply: Service is already running" };
statusCodes[0x9080] = { message: "ALLJOYN_BINDSESSIONPORT_REPLY_ALREADY_EXISTS", description: "BindSessionPort reply: SessionPort already exists" };
statusCodes[0x9081] = { message: "ALLJOYN_BINDSESSIONPORT_REPLY_FAILED", description: "BindSessionPort reply: Failed" };
statusCodes[0x9083] = { message: "ALLJOYN_JOINSESSION_REPLY_NO_SESSION", description: "JoinSession reply: Session with given name does not exist" };
statusCodes[0x9084] = { message: "ALLJOYN_JOINSESSION_REPLY_UNREACHABLE", description: "JoinSession reply: Failed to find suitable transport" };
statusCodes[0x9085] = { message: "ALLJOYN_JOINSESSION_REPLY_CONNECT_FAILED", description: "JoinSession reply: Connect to advertised address" };
statusCodes[0x9086] = { message: "ALLJOYN_JOINSESSION_REPLY_REJECTED", description: "JoinSession reply: The session creator rejected the join req" };
statusCodes[0x9087] = { message: "ALLJOYN_JOINSESSION_REPLY_BAD_SESSION_OPTS", description: "JoinSession reply: Failed due to session option incompatibilities" };
statusCodes[0x9088] = { message: "ALLJOYN_JOINSESSION_REPLY_FAILED", description: "JoinSession reply: Failed for unknown reason" };
statusCodes[0x908a] = { message: "ALLJOYN_LEAVESESSION_REPLY_NO_SESSION", description: "LeaveSession reply: Session with given name does not exist" };
statusCodes[0x908b] = { message: "ALLJOYN_LEAVESESSION_REPLY_FAILED", description: "LeaveSession reply: Failed for unspecified reason" };
statusCodes[0x908c] = { message: "ALLJOYN_ADVERTISENAME_REPLY_TRANSPORT_NOT_AVAILABLE", description: "AdvertiseName reply: The specified transport is unavailable for advertising" };
statusCodes[0x908d] = { message: "ALLJOYN_ADVERTISENAME_REPLY_ALREADY_ADVERTISING", description: "AdvertiseName reply: This endpoint is already advertising this name" };
statusCodes[0x908e] = { message: "ALLJOYN_ADVERTISENAME_REPLY_FAILED", description: "AdvertiseName reply: Advertise failed" };
statusCodes[0x9090] = { message: "ALLJOYN_CANCELADVERTISENAME_REPLY_FAILED", description: "CancelAdvertiseName reply: Advertise failed" };
statusCodes[0x9091] = { message: "ALLJOYN_FINDADVERTISEDNAME_REPLY_TRANSPORT_NOT_AVAILABLE", description: "FindAdvertisedName reply: The specified transport is unavailable for discovery" };
statusCodes[0x9092] = { message: "ALLJOYN_FINDADVERTISEDNAME_REPLY_ALREADY_DISCOVERING", description: "FindAdvertisedName reply: This endpoint is already discovering this name" };
statusCodes[0x9093] = { message: "ALLJOYN_FINDADVERTISEDNAME_REPLY_FAILED", description: "FindAdvertisedName reply: Failed" };
statusCodes[0x9095] = { message: "ALLJOYN_CANCELFINDADVERTISEDNAME_REPLY_FAILED", description: "CancelFindAdvertisedName reply: Failed" };
statusCodes[0x9096] = { message: "BUS_UNEXPECTED_DISPOSITION", description: "An unexpected disposition was returned and has been treated as an error" };
statusCodes[0x9097] = { message: "BUS_INTERFACE_ACTIVATED", description: "An InterfaceDescription cannot be modified once activated" };
statusCodes[0x9098] = { message: "ALLJOYN_UNBINDSESSIONPORT_REPLY_BAD_PORT", description: "UnbindSessionPort reply: SessionPort does not exist" };
statusCodes[0x9099] = { message: "ALLJOYN_UNBINDSESSIONPORT_REPLY_FAILED", description: "UnbindSessionPort reply: Failed" };
statusCodes[0x909a] = { message: "ALLJOYN_BINDSESSIONPORT_REPLY_INVALID_OPTS", description: "BindSessionPort reply: SessionOpts are invalid" };
statusCodes[0x909b] = { message: "ALLJOYN_JOINSESSION_REPLY_ALREADY_JOINED", description: "JoinSession reply: Caller has already joined the session" };
statusCodes[0x909c] = { message: "BUS_SELF_CONNECT", description: "Received BusHello from self" };
statusCodes[0x909d] = { message: "BUS_SECURITY_NOT_ENABLED", description: "Security is not enabled for this bus attachment" };
statusCodes[0x909e] = { message: "BUS_LISTENER_ALREADY_SET", description: "A listener has already been set" };
statusCodes[0x909f] = { message: "BUS_PEER_AUTH_VERSION_MISMATCH", description: "Incompatible peer authentication version numbers" };
statusCodes[0x90a0] = { message: "ALLJOYN_SETLINKTIMEOUT_REPLY_NOT_SUPPORTED", description: "Local router does not support SetLinkTimeout" };
statusCodes[0x90a1] = { message: "ALLJOYN_SETLINKTIMEOUT_REPLY_NO_DEST_SUPPORT", description: "SetLinkTimeout not supported by destination" };
statusCodes[0x90a2] = { message: "ALLJOYN_SETLINKTIMEOUT_REPLY_FAILED", description: "SetLinkTimeout failed" };
statusCodes[0x90a3] = { message: "ALLJOYN_ACCESS_PERMISSION_WARNING", description: "No permission to use Wifi" };
statusCodes[0x90a4] = { message: "ALLJOYN_ACCESS_PERMISSION_ERROR", description: "No permission to access peer service" };
statusCodes[0x90a5] = { message: "BUS_DESTINATION_NOT_AUTHENTICATED", description: "Cannot send a signal to a destination that is not authenticated" };
statusCodes[0x90a6] = { message: "BUS_ENDPOINT_REDIRECTED", description: "Endpoint was redirected to another address" };
statusCodes[0x90a7] = { message: "BUS_AUTHENTICATION_PENDING", description: "Authentication of remote peer is pending" };
statusCodes[0x90a8] = { message: "BUS_NOT_AUTHORIZED", description: "Operation was not authorized" };
statusCodes[0x90a9] = { message: "PACKET_BUS_NO_SUCH_CHANNEL", description: "Received packet for unknown channel" };
statusCodes[0x90aa] = { message: "PACKET_BAD_FORMAT", description: "Received packet with incorrect header information" };
statusCodes[0x90ab] = { message: "PACKET_CONNECT_TIMEOUT", description: "Timed out waiting for connect response" };
statusCodes[0x90ac] = { message: "PACKET_CHANNEL_FAIL", description: "Failed to create new comm channel" };
statusCodes[0x90ad] = { message: "PACKET_TOO_LARGE", description: "Message too large for use with packet based transport" };
statusCodes[0x90ae] = { message: "PACKET_BAD_PARAMETER", description: "Invalid PacketEngine control packet received" };
statusCodes[0x90af] = { message: "PACKET_BAD_CRC", description: "Packet has invalid CRC" };
statusCodes[0x90cb] = { message: "RENDEZVOUS_SERVER_DEACTIVATED_USER", description: "Rendezvous Server has deactivated the current user. Register with the Rendezvous Server to continue." };
statusCodes[0x90cc] = { message: "RENDEZVOUS_SERVER_UNKNOWN_USER", description: "Rendezvous Server does not recognize the current user. Register with the Rendezvous Server to continue." };
statusCodes[0x90cd] = { message: "UNABLE_TO_CONNECT_TO_RENDEZVOUS_SERVER", description: "Unable to connect to the Rendezvous Server" };
statusCodes[0x90ce] = { message: "NOT_CONNECTED_TO_RENDEZVOUS_SERVER", description: "Not connected to the Rendezvous Server" };
statusCodes[0x90cf] = { message: "UNABLE_TO_SEND_MESSAGE_TO_RENDEZVOUS_SERVER", description: "Unable to send message to the Rendezvous Server" };
statusCodes[0x90d0] = { message: "INVALID_RENDEZVOUS_SERVER_INTERFACE_MESSAGE", description: "Invalid Rendezvous Server interface message" };
statusCodes[0x90d1] = { message: "INVALID_PERSISTENT_CONNECTION_MESSAGE_RESPONSE", description: "Invalid message response received over the Persistent connection with the Rendezvous Server" };
statusCodes[0x90d2] = { message: "INVALID_ON_DEMAND_CONNECTION_MESSAGE_RESPONSE", description: "Invalid message response received over the On Demand connection with the Rendezvous Server" };
statusCodes[0x90d3] = { message: "INVALID_HTTP_METHOD_USED_FOR_RENDEZVOUS_SERVER_INTERFACE_MESSAGE", description: "Invalid HTTP method type used for Rendezvous Server interface message" };
statusCodes[0x90d4] = { message: "RENDEZVOUS_SERVER_ERR500_INTERNAL_ERROR", description: "Received a HTTP 500 status code from the Rendezvous Server. This indicates an internal error in the Server" };
statusCodes[0x90d5] = { message: "RENDEZVOUS_SERVER_ERR503_STATUS_UNAVAILABLE", description: "Received a HTTP 503 status code from the Rendezvous Server. This indicates unavailability of the Server error state" };
statusCodes[0x90d6] = { message: "RENDEZVOUS_SERVER_ERR401_UNAUTHORIZED_REQUEST", description: "Received a HTTP 401 status code from the Rendezvous Server. This indicates that the client is unauthorized to send a request to the Server. The Client login procedure must be initiated." };
statusCodes[0x90d7] = { message: "RENDEZVOUS_SERVER_UNRECOVERABLE_ERROR", description: "Received a HTTP status code indicating unrecoverable error from the Rendezvous Server. The connection with the Server should be re-established." };
statusCodes[0x90d8] = { message: "RENDEZVOUS_SERVER_ROOT_CERTIFICATE_UNINITIALIZED", description: "Rendezvous Server root ceritificate uninitialized." };
statusCodes[0x90d9] = { message: "BUS_NO_SUCH_ANNOTATION", description: "No such annotation for a GET or SET operation " };
statusCodes[0x90da] = { message: "BUS_ANNOTATION_ALREADY_EXISTS", description: "Attempt to add an annotation to an interface or property that already exists" };
statusCodes[0x90db] = { message: "SOCK_CLOSING", description: "Socket close in progress" };
statusCodes[0x90dc] = { message: "NO_SUCH_DEVICE", description: "A referenced device cannot be located" };
statusCodes[0x90dd] = { message: "P2P", description: "An error occurred in a Wi-Fi Direct helper method call" };
statusCodes[0x90de] = { message: "P2P_TIMEOUT", description: "A timeout occurred in a Wi-Fi Direct helper method call" };
statusCodes[0x90df] = { message: "P2P_NOT_CONNECTED", description: "A required Wi-Fi Direct network connection does not exist" };
statusCodes[0x90e0] = { message: "BAD_TRANSPORT_MASK", description: "Exactly one mask bit was not set in the provided TransportMask" };
statusCodes[0x90e1] = { message: "PROXIMITY_CONNECTION_ESTABLISH_FAIL", description: "Fail to establish P2P proximity connection" };
statusCodes[0x90e2] = { message: "PROXIMITY_NO_PEERS_FOUND", description: "Cannot find proximity P2P peers" };
statusCodes[0x90e3] = { message: "BUS_OBJECT_NOT_REGISTERED", description: "Operation not permitted on unregistered bus object" };
statusCodes[0x90e4] = { message: "P2P_DISABLED", description: "Wi-Fi Direct is disabled on the device" };
statusCodes[0x90e5] = { message: "P2P_BUSY", description: "Wi-Fi Direct resources are in busy state" };
statusCodes[0x90e6] = { message: "BUS_INCOMPATIBLE_DAEMON", description: "The router version is too old to be used by this client" };
statusCodes[0x90e7] = { message: "P2P_NO_GO", description: "Attempt to execute a Wi-Fi Direct GO-related operation while STA" };
statusCodes[0x90e8] = { message: "P2P_NO_STA", description: "Attempt to execute a Wi-Fi Direct STA-related operation while GO" };
statusCodes[0x90e9] = { message: "P2P_FORBIDDEN", description: "Attempt to execute a forbidden Wi-Fi Direct operation" };
statusCodes[0x90ea] = { message: "ALLJOYN_ONAPPSUSPEND_REPLY_FAILED", description: "OnAppSuspend reply: Failed" };
statusCodes[0x90eb] = { message: "ALLJOYN_ONAPPSUSPEND_REPLY_UNSUPPORTED", description: "OnAppSuspend reply: Unsupported operation" };
statusCodes[0x90ec] = { message: "ALLJOYN_ONAPPRESUME_REPLY_FAILED", description: "OnAppResume reply: Failed" };
statusCodes[0x90ed] = { message: "ALLJOYN_ONAPPRESUME_REPLY_UNSUPPORTED", description: "OnAppResume reply: Unsupported operation" };
statusCodes[0x90ee] = { message: "BUS_NO_SUCH_MESSAGE", description: "Message not found" };
statusCodes[0x90ef] = { message: "ALLJOYN_REMOVESESSIONMEMBER_REPLY_NO_SESSION", description: "RemoveSessionMember reply: Specified session Id with this endpoint was not found" };
statusCodes[0x90f0] = { message: "ALLJOYN_REMOVESESSIONMEMBER_NOT_BINDER", description: "RemoveSessionMember reply: Endpoint is not the binder of session" };
statusCodes[0x90f1] = { message: "ALLJOYN_REMOVESESSIONMEMBER_NOT_MULTIPOINT", description: "RemoveSessionMember reply: Session is not multipoint" };
statusCodes[0x90f2] = { message: "ALLJOYN_REMOVESESSIONMEMBER_NOT_FOUND", description: "RemoveSessionMember reply: Specified session member was not found" };
statusCodes[0x90f3] = { message: "ALLJOYN_REMOVESESSIONMEMBER_INCOMPATIBLE_REMOTE_DAEMON", description: "RemoveSessionMember reply: The remote router does not support this feature" };
statusCodes[0x90f4] = { message: "ALLJOYN_REMOVESESSIONMEMBER_REPLY_FAILED", description: "RemoveSessionMember reply: Failed for unspecified reason" };
statusCodes[0x90f5] = { message: "BUS_REMOVED_BY_BINDER", description: "The session member was removed by the binder" };
statusCodes[0x90f6] = { message: "BUS_MATCH_RULE_NOT_FOUND", description: "The match rule was not found" };
statusCodes[0x90f7] = { message: "ALLJOYN_PING_FAILED", description: "Ping failed" };
statusCodes[0x90f8] = { message: "ALLJOYN_PING_REPLY_UNREACHABLE", description: "Name pinged is unreachable" };
statusCodes[0x90f9] = { message: "UDP_MSG_TOO_LONG", description: "The message is too long to transmit over the UDP transport" };
statusCodes[0x90fa] = { message: "UDP_DEMUX_NO_ENDPOINT", description: "Tried to demux the callback but found no endpoint for the connection" };
statusCodes[0x90fb] = { message: "UDP_NO_NETWORK", description: "Not listening on network implied by IP address" };
statusCodes[0x90fc] = { message: "UDP_UNEXPECTED_LENGTH", description: "Request for more bytes than are in the underlying datagram" };
statusCodes[0x90fd] = { message: "UDP_UNEXPECTED_FLOW", description: "The data flow type of the endpoint has an unexpected value" };
statusCodes[0x90fe] = { message: "UDP_DISCONNECT", description: "Unexpected disconnect occurred" };
statusCodes[0x90ff] = { message: "UDP_NOT_IMPLEMENTED", description: "Feature not implemented for the UDP transport" };
statusCodes[0x9100] = { message: "UDP_NO_LISTENER", description: "Discovery started with no listener to receive callbacks" };
statusCodes[0x9101] = { message: "UDP_STOPPING", description: "Attempt to use UDP when transport stopping" };
statusCodes[0x9102] = { message: "ARDP_BACKPRESSURE", description: "ARDP is applying backpressure -- send window is full" };
statusCodes[0x9103] = { message: "UDP_BACKPRESSURE", description: "UDP is applying backpressure to ARDP -- queue is full" };
statusCodes[0x9104] = { message: "ARDP_INVALID_STATE", description: "Current ARDP state does not allow attempted operation" };
statusCodes[0x9105] = { message: "ARDP_TTL_EXPIRED", description: "Time-To-Live of ARDP segment has expired" };
statusCodes[0x9106] = { message: "ARDP_PERSIST_TIMEOUT", description: "Remote endpoint stopped consuming data -- send window is full" };
statusCodes[0x9107] = { message: "ARDP_PROBE_TIMEOUT", description: "ARDP link timeout" };
statusCodes[0x9108] = { message: "ARDP_REMOTE_CONNECTION_RESET", description: "Remote endpoint disconected: sent RST" };
statusCodes[0x9109] = { message: "UDP_BUSHELLO", description: "UDP Transport is unable to complete an operation relating to a BusHello Message" };
statusCodes[0x910a] = { message: "UDP_MESSAGE", description: "UDP Transport is unable to complete an operation on an AllJoyn Message" };
statusCodes[0x910b] = { message: "UDP_INVALID", description: "UDP Transport detected invalid data or parameters from network" };
statusCodes[0x910c] = { message: "UDP_UNSUPPORTED", description: "UDP Transport does not support the indicated operation or type" };
statusCodes[0x910d] = { message: "UDP_ENDPOINT_STALLED", description: "UDP Transport has detected an endpoint that is not terminating correctly" };
statusCodes[0x910e] = { message: "ARDP_INVALID_RESPONSE", description: "ARDP Transport detected invalid message data that causes disconnect" };
statusCodes[0x910f] = { message: "ARDP_INVALID_CONNECTION", description: "ARDP connection not found" };
statusCodes[0x9110] = { message: "UDP_LOCAL_DISCONNECT", description: "UDP Transport connection (intentionally) disconnected on local side" };
statusCodes[0x9111] = { message: "UDP_EARLY_EXIT", description: "UDP Transport connection aborted during setup" };
statusCodes[0x9112] = { message: "UDP_LOCAL_DISCONNECT_FAIL", description: "UDP Transport local connection disconnect failure" };
statusCodes[0x9113] = { message: "ARDP_DISCONNECTING", description: "ARDP connection is being shut down" };
statusCodes[0x9114] = { message: "ALLJOYN_PING_REPLY_INCOMPATIBLE_REMOTE_ROUTING_NODE", description: "Remote routing node does not implement Ping" };
statusCodes[0x9115] = { message: "ALLJOYN_PING_REPLY_TIMEOUT", description: "Ping call timeout" };
statusCodes[0x9116] = { message: "ALLJOYN_PING_REPLY_UNKNOWN_NAME", description: "Name not found currently or part of any known session" };
statusCodes[0x9117] = { message: "ALLJOYN_PING_REPLY_FAILED", description: "Generic Ping call error" };
statusCodes[0x9118] = { message: "TCP_MAX_UNTRUSTED", description: "The maximum configured number of Thin Library connections has been reached" };
statusCodes[0x9119] = { message: "ALLJOYN_PING_REPLY_IN_PROGRESS", description: "A ping request for same name is already in progress" };
statusCodes[0x911a] = { message: "LANGUAGE_NOT_SUPPORTED", description: "The language requested is not supported" };
statusCodes[0x911b] = { message: "ABOUT_FIELD_ALREADY_SPECIFIED", description: "A field using the same name is already specified." };
statusCodes[0x911c] = { message: "UDP_NOT_DISCONNECTED", description: "A UDP stream was found to be connected during teardown" };
statusCodes[0x911d] = { message: "UDP_ENDPOINT_NOT_STARTED", description: "Attempt to send on a UDP endpoint that is not started" };
statusCodes[0x911e] = { message: "UDP_ENDPOINT_REMOVED", description: "Attempt to send on a UDP endpoint that has been removed" };
statusCodes[0x911f] = { message: "ARDP_VERSION_NOT_SUPPORTED", description: "Specified version of ARDP Protocol is not supported" };
statusCodes[0x9120] = { message: "CONNECTION_LIMIT_EXCEEDED", description: "Connection rejected due to configured connection limits" };
statusCodes[0x9121] = { message: "ARDP_WRITE_BLOCKED", description: "ARDP cannot write to UDP socket (queue is full)" };
statusCodes[0x9122] = { message: "PERMISSION_DENIED", description: "Permission denied" };
statusCodes[0x9123] = { message: "ABOUT_DEFAULT_LANGUAGE_NOT_SPECIFIED", description: "Default language must be specified before setting a localized field" };
statusCodes[0x9124] = { message: "ABOUT_SESSIONPORT_NOT_BOUND", description: "Unable to announce session port that is not bound to the BusAttachment" };
statusCodes[0x9125] = { message: "ABOUT_ABOUTDATA_MISSING_REQUIRED_FIELD", description: "The AboutData is missing a required field." };
statusCodes[0x9126] = { message: "ABOUT_INVALID_ABOUTDATA_LISTENER", description: "The AboutDataListener returns invalid data. Most likely cause: the announced data does not match with non-announced data." };
statusCodes[0x9127] = { message: "BUS_PING_GROUP_NOT_FOUND", description: "Ping group did not exist" };
statusCodes[0x9128] = { message: "BUS_REMOVED_BY_BINDER_SELF", description: "The self-joined session member was removed by the binder" };
statusCodes[0x9129] = { message: "INVALID_CONFIG", description: "Invalid configuration item or combination of items detected" };
statusCodes[0x912a] = { message: "ABOUT_INVALID_ABOUTDATA_FIELD_VALUE", description: "General error indicating the value given for an About Data field is invalid." };
statusCodes[0x912b] = { message: "ABOUT_INVALID_ABOUTDATA_FIELD_APPID_SIZE", description: "Error indicating the AppId field is not a 128-bit bite array." };

var Status = function (statusCode) {
    this.code = statusCode;
    this.message = statusCodes[statusCode].message;
    this.description = statusCodes[statusCode].description;
};

// Threat Status as enum as well. Add predefined
// status codes to constructor's properties
for (var i in statusCodes) {
    var code = statusCodes[i];
    Status[code.message] = i;
}

module.exports = Status;

});
